// TestSort.h


/* Header */
//====================================================================================================
#include <iostream>
#include <windows.h>
#include <string>
#include <condition_variable>
#include <chrono>
#include <random>


#include <DS_Common/Sort/InsertionSort.h>
#include <DS_Common/Sort/QuickSort.h>
#include <DS_Common/Time/Timer.h>

using namespace DS_Common;
//====================================================================================================

/* Definition  */
//====================================================================================================
namespace UnitTest {
	class TestSort: public UnitTest::Test {
	public: // function

	private: // function

	private: // parameters

	};

	int *seq;
	int seq_size;
	
}
//====================================================================================================

/* Definition Function */
//====================================================================================================
namespace UnitTest {

	//-----------------------------------------------------------------------------------------------
	void initialize(const int n );
	//-----------------------------------------------------------------------------------------------
	void basicTest();
	//-----------------------------------------------------------------------------------------------
	bool isSorted(int *seq, int n);
	//-----------------------------------------------------------------------------------------------
}
//====================================================================================================

/* Public Function */
//====================================================================================================
void TestSort()
{
	std::vector<int> n_vec = {5,10,100,1000};
	for (auto ele: n_vec)
	{
		T_SORT::initialize(n);
		T_SORT::basicTest();
	}
	

}
//====================================================================================================


/* Private Function */
//====================================================================================================

namespace UnitTest {
	//-----------------------------------------------------------------------------------------------

	void initialize(const int n)
	{
		srand(time(NULL));

		seq =(int*) malloc(n * sizeof(int));
		seq_size = n;

		for (int i = 0; i < n; i++)
		{
			seq[i] = rand();
		}
	}


	//-----------------------------------------------------------------------------------------------
	bool isSorted(int *seq, int n)
	{
		for (int i = 0; i < n-1; i++)
		{
			if (seq[i] > seq[i + 1])
				return false;
		}
		return true;
	};
	//-----------------------------------------------------------------------------------------------

	void basicTest()
	{
		

		Time::Timer timer;
		timer.start();
		
		InsertionSort(seq,n);

		auto micro = timer.getMicroSec();

		if (!isSorted(seq, n))
			throw "Not Sort Successfull";

		std::cout << micro << std::endl;
	}
	//-----------------------------------------------------------------------------------------------
}
//-------------------------------------------------------------------------------------------------

//====================================================================================================

