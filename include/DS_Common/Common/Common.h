// Common.h

#ifndef __DS_COMMON_COMMON_H__
#define __DS_COMMON_COMMON_H__

/* Information */
//====================================================================================================

/*!
*  @file   Common.h
*
*  @brief  Common.
*
*  @author Po-Wei Huang
*
*  @date   2021/05/22
*/

//====================================================================================================


/* Header */
//====================================================================================================

#include <iostream>
#include <algorithm>

#include <DS_Common/LibSetting/LibSetting.h>
//====================================================================================================


/* Definition */
//====================================================================================================
//====================================================================================================



/* Public Function */
//====================================================================================================

namespace DS_Common {
	//------------------------------------------------------------------------------------------------
	template<class T>
	void DS_COMMON_EXPORTS ChangeSize1D(T*&a, const int oldSize, const int newSize)
	{
		if (newSize <= 0) {
			throw "New length must be >=0";
			return;
		}
		if (a == nullptr) {
			throw "nullptr change size";
			return;
		}


		T* temp = new T[newSize];
		int number = min(oldSize, newSize);
		std::copy(a,a+number, temp);
		delete [] a;
		a = temp;
	}

	//------------------------------------------------------------------------------------------------	
}
//====================================================================================================

#endif /* __DS_COMMON_COMMON_H__ */